--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: prometheus; Type: DATABASE; Schema: -; Owner: root
--

CREATE DATABASE prometheus WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.UTF-8' LC_CTYPE = 'en_US.UTF-8';


ALTER DATABASE prometheus OWNER TO root;

\connect prometheus

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: add_default_project(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION add_default_project() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
insert into projects (name, user_id) values ('Default', NEW.id); return NEW;
end $$;


ALTER FUNCTION public.add_default_project() OWNER TO root;

--
-- Name: add_default_services(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION add_default_services() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
insert into user_services values (NEW.id, 0); return NEW;
END
$$;


ALTER FUNCTION public.add_default_services() OWNER TO root;

--
-- Name: block_first_time_update(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION block_first_time_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
IF OLD.first != OLD.next THEN
  NEW.first = OLD.first;
END IF;
RETURN NEW;
END;
$$;


ALTER FUNCTION public.block_first_time_update() OWNER TO root;

--
-- Name: block_root_disable(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION block_root_disable() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
IF (NEW.id = 3 AND NEW.disabled = true) THEN
    NEW.disabled = false;
END IF;
RETURN NEW;
END
$$;


ALTER FUNCTION public.block_root_disable() OWNER TO root;

--
-- Name: delete_project(integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION delete_project(projid integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    r record;
BEGIN
    DELETE FROM tasks * WHERE project=projID;
    IF EXISTS(SELECT * FROM projects WHERE parent=projID) THEN
        FOR r IN (SELECT id FROM projects  WHERE parent=projID)
        LOOP
            EXECUTE delete_project(r.id);
        END LOOP;
    END IF;
    DELETE FROM projects * WHERE id=projID;
END
$$;


ALTER FUNCTION public.delete_project(projid integer) OWNER TO root;

--
-- Name: set_first_reminder_time(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION set_first_reminder_time() RETURNS trigger
    LANGUAGE plpgsql
    AS $$ begin
NEW.first = NEW.next;
return NEW;
END;
$$;


ALTER FUNCTION public.set_first_reminder_time() OWNER TO root;

--
-- Name: update_mtime(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION update_mtime() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
NEW.mtime = now();
return NEW;
end;
$$;


ALTER FUNCTION public.update_mtime() OWNER TO root;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: sms; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE sms (
    id integer NOT NULL,
    name character varying NOT NULL,
    address character varying NOT NULL
);


ALTER TABLE public.sms OWNER TO root;

--
-- Name: contacts; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW contacts AS
 SELECT sms.name
   FROM sms
  ORDER BY sms.name;


ALTER TABLE public.contacts OWNER TO root;

--
-- Name: domains; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE domains (
    id integer NOT NULL,
    name character varying NOT NULL,
    regex character varying NOT NULL,
    title character varying
);


ALTER TABLE public.domains OWNER TO root;

--
-- Name: domains_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE domains_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.domains_id_seq OWNER TO root;

--
-- Name: domains_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE domains_id_seq OWNED BY domains.id;


--
-- Name: genres; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE genres (
    id integer NOT NULL,
    name character varying NOT NULL,
    CONSTRAINT check_genre_valid CHECK (((name)::text ~ '^.+$'::text))
);


ALTER TABLE public.genres OWNER TO root;

--
-- Name: genres_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.genres_id_seq OWNER TO root;

--
-- Name: genres_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE genres_id_seq OWNED BY genres.id;


--
-- Name: movies_genre; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE movies_genre (
    id integer NOT NULL,
    movie integer,
    genre integer
);


ALTER TABLE public.movies_genre OWNER TO root;

--
-- Name: movie_genre_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE movie_genre_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.movie_genre_id_seq OWNER TO root;

--
-- Name: movie_genre_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE movie_genre_id_seq OWNED BY movies_genre.id;


--
-- Name: movies; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE movies (
    id integer NOT NULL,
    ttid character varying,
    title character varying NOT NULL,
    series integer,
    year integer,
    released date,
    duration integer,
    director character varying,
    description character varying,
    needs_attention boolean DEFAULT false,
    size integer,
    file character varying,
    checksum character varying,
    resolution character varying,
    v_rate character varying,
    a_rate character varying
);


ALTER TABLE public.movies OWNER TO root;

--
-- Name: movies_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE movies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.movies_id_seq OWNER TO root;

--
-- Name: movies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE movies_id_seq OWNED BY movies.id;


--
-- Name: notes; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE notes (
    id integer NOT NULL,
    title character varying NOT NULL,
    text character varying NOT NULL,
    user_id integer,
    ctime timestamp with time zone DEFAULT now(),
    mtime timestamp with time zone DEFAULT now()
);


ALTER TABLE public.notes OWNER TO root;

--
-- Name: notes_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE notes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.notes_id_seq OWNER TO root;

--
-- Name: notes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE notes_id_seq OWNED BY notes.id;


--
-- Name: projects; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE projects (
    id integer NOT NULL,
    name character varying NOT NULL,
    parent integer,
    user_id integer NOT NULL
);


ALTER TABLE public.projects OWNER TO root;

--
-- Name: projects_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE projects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.projects_id_seq OWNER TO root;

--
-- Name: projects_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE projects_id_seq OWNED BY projects.id;


--
-- Name: reminders; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE reminders (
    id integer NOT NULL,
    message character varying NOT NULL,
    type character varying NOT NULL,
    job_id integer,
    next timestamp with time zone NOT NULL,
    repeat character varying,
    duration character varying,
    user_id integer NOT NULL,
    recipient character varying,
    subject character varying,
    first timestamp with time zone,
    count integer DEFAULT 0
);


ALTER TABLE public.reminders OWNER TO root;

--
-- Name: reminders_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE reminders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.reminders_id_seq OWNER TO root;

--
-- Name: reminders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE reminders_id_seq OWNED BY reminders.id;


--
-- Name: series; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE series (
    id integer NOT NULL,
    name character varying NOT NULL,
    CONSTRAINT check_series_valid CHECK (((name)::text ~ '^.+$'::text))
);


ALTER TABLE public.series OWNER TO root;

--
-- Name: series_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE series_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.series_id_seq OWNER TO root;

--
-- Name: series_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE series_id_seq OWNED BY series.id;


--
-- Name: services; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE services (
    id integer NOT NULL,
    service character varying NOT NULL,
    function character varying NOT NULL,
    row_order integer NOT NULL
);


ALTER TABLE public.services OWNER TO root;

--
-- Name: services_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.services_id_seq OWNER TO root;

--
-- Name: services_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE services_id_seq OWNED BY services.id;


--
-- Name: sms_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE sms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sms_id_seq OWNER TO root;

--
-- Name: sms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE sms_id_seq OWNED BY sms.id;


--
-- Name: tasks; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tasks (
    id integer NOT NULL,
    name character varying NOT NULL,
    description character varying DEFAULT ''::character varying,
    deadline timestamp with time zone,
    priority integer,
    is_urgent boolean DEFAULT false,
    is_other boolean DEFAULT false,
    project integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.tasks OWNER TO root;

--
-- Name: tasks_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE tasks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tasks_id_seq OWNER TO root;

--
-- Name: tasks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE tasks_id_seq OWNED BY tasks.id;


--
-- Name: tv; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tv (
    id integer NOT NULL,
    ttid character varying,
    title character varying NOT NULL,
    series integer,
    year integer,
    released date,
    duration integer,
    director character varying,
    description character varying,
    needs_attention boolean DEFAULT false,
    season integer,
    episode integer,
    size integer,
    file character varying,
    checksum character varying,
    resolution character varying,
    v_rate character varying,
    a_rate character varying
);


ALTER TABLE public.tv OWNER TO root;

--
-- Name: tv_genre; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tv_genre (
    id integer NOT NULL,
    episode integer,
    genre integer
);


ALTER TABLE public.tv_genre OWNER TO root;

--
-- Name: tv_genre_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE tv_genre_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tv_genre_id_seq OWNER TO root;

--
-- Name: tv_genre_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE tv_genre_id_seq OWNED BY tv_genre.id;


--
-- Name: tv_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE tv_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tv_id_seq OWNER TO root;

--
-- Name: tv_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE tv_id_seq OWNED BY tv.id;


--
-- Name: user_services; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE user_services (
    user_id integer NOT NULL,
    service_id integer NOT NULL,
    id integer NOT NULL
);


ALTER TABLE public.user_services OWNER TO root;

--
-- Name: user_services_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE user_services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_services_id_seq OWNER TO root;

--
-- Name: user_services_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE user_services_id_seq OWNED BY user_services.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    username character varying NOT NULL,
    pw character varying NOT NULL,
    is_admin boolean DEFAULT false,
    is_shared boolean DEFAULT false,
    disabled boolean DEFAULT false,
    theme integer DEFAULT 2,
    domain integer DEFAULT 2
);


ALTER TABLE public.users OWNER TO root;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO root;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY domains ALTER COLUMN id SET DEFAULT nextval('domains_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY genres ALTER COLUMN id SET DEFAULT nextval('genres_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY movies ALTER COLUMN id SET DEFAULT nextval('movies_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY movies_genre ALTER COLUMN id SET DEFAULT nextval('movie_genre_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY notes ALTER COLUMN id SET DEFAULT nextval('notes_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY projects ALTER COLUMN id SET DEFAULT nextval('projects_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY reminders ALTER COLUMN id SET DEFAULT nextval('reminders_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY series ALTER COLUMN id SET DEFAULT nextval('series_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY services ALTER COLUMN id SET DEFAULT nextval('services_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY sms ALTER COLUMN id SET DEFAULT nextval('sms_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY tasks ALTER COLUMN id SET DEFAULT nextval('tasks_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY tv ALTER COLUMN id SET DEFAULT nextval('tv_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY tv_genre ALTER COLUMN id SET DEFAULT nextval('tv_genre_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY user_services ALTER COLUMN id SET DEFAULT nextval('user_services_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: domains_name_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY domains
    ADD CONSTRAINT domains_name_key UNIQUE (name);


--
-- Name: domains_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY domains
    ADD CONSTRAINT domains_pkey PRIMARY KEY (id);


--
-- Name: genres_name_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY genres
    ADD CONSTRAINT genres_name_key UNIQUE (name);


--
-- Name: genres_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY genres
    ADD CONSTRAINT genres_pkey PRIMARY KEY (id);


--
-- Name: movie_genre_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY movies_genre
    ADD CONSTRAINT movie_genre_pkey PRIMARY KEY (id);


--
-- Name: movies_file_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY movies
    ADD CONSTRAINT movies_file_key UNIQUE (file);


--
-- Name: movies_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY movies
    ADD CONSTRAINT movies_pkey PRIMARY KEY (id);


--
-- Name: movies_ttid_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY movies
    ADD CONSTRAINT movies_ttid_key UNIQUE (ttid);


--
-- Name: notes_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY notes
    ADD CONSTRAINT notes_pkey PRIMARY KEY (id);


--
-- Name: projects_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_pkey PRIMARY KEY (id);


--
-- Name: reminders_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY reminders
    ADD CONSTRAINT reminders_pkey PRIMARY KEY (id);


--
-- Name: row_order_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT row_order_key UNIQUE (row_order);


--
-- Name: series_name_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY series
    ADD CONSTRAINT series_name_key UNIQUE (name);


--
-- Name: series_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY series
    ADD CONSTRAINT series_pkey PRIMARY KEY (id);


--
-- Name: services_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT services_pkey PRIMARY KEY (id);


--
-- Name: services_service_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT services_service_key UNIQUE (service);


--
-- Name: services_url_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY services
    ADD CONSTRAINT services_url_key UNIQUE (function);


--
-- Name: sms_address_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sms
    ADD CONSTRAINT sms_address_key UNIQUE (address);


--
-- Name: sms_name_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sms
    ADD CONSTRAINT sms_name_key UNIQUE (name);


--
-- Name: sms_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sms
    ADD CONSTRAINT sms_pkey PRIMARY KEY (id);


--
-- Name: tasks_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tasks
    ADD CONSTRAINT tasks_pkey PRIMARY KEY (id);


--
-- Name: tv_file_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tv
    ADD CONSTRAINT tv_file_key UNIQUE (file);


--
-- Name: tv_genre_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tv_genre
    ADD CONSTRAINT tv_genre_pkey PRIMARY KEY (id);


--
-- Name: tv_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tv
    ADD CONSTRAINT tv_pkey PRIMARY KEY (id);


--
-- Name: tv_ttid_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tv
    ADD CONSTRAINT tv_ttid_key UNIQUE (ttid);


--
-- Name: user_services_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY user_services
    ADD CONSTRAINT user_services_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users_username_key; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: add_default_project; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER add_default_project AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE add_default_project();


--
-- Name: add_default_services; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER add_default_services AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE add_default_services();


--
-- Name: block_first_time_update_trigger; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER block_first_time_update_trigger BEFORE UPDATE ON reminders FOR EACH ROW EXECUTE PROCEDURE block_first_time_update();


--
-- Name: block_root_disable; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER block_root_disable BEFORE UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE block_root_disable();


--
-- Name: notes_update; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER notes_update BEFORE UPDATE ON notes FOR EACH ROW EXECUTE PROCEDURE update_mtime();


--
-- Name: set_first_reminder_time_trigger; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER set_first_reminder_time_trigger BEFORE INSERT ON reminders FOR EACH ROW EXECUTE PROCEDURE set_first_reminder_time();


--
-- Name: movie_genre_genre_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY movies_genre
    ADD CONSTRAINT movie_genre_genre_fkey FOREIGN KEY (genre) REFERENCES genres(id);


--
-- Name: movie_genre_movie_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY movies_genre
    ADD CONSTRAINT movie_genre_movie_fkey FOREIGN KEY (movie) REFERENCES movies(id);


--
-- Name: movies_series_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY movies
    ADD CONSTRAINT movies_series_fkey FOREIGN KEY (series) REFERENCES series(id);


--
-- Name: notes_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY notes
    ADD CONSTRAINT notes_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: projects_parent_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_parent_fkey FOREIGN KEY (parent) REFERENCES projects(id);


--
-- Name: projects_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY projects
    ADD CONSTRAINT projects_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: reminders_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY reminders
    ADD CONSTRAINT reminders_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: tasks_project_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY tasks
    ADD CONSTRAINT tasks_project_fkey FOREIGN KEY (project) REFERENCES projects(id);


--
-- Name: tasks_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY tasks
    ADD CONSTRAINT tasks_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: tv_genre_episode_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY tv_genre
    ADD CONSTRAINT tv_genre_episode_fkey FOREIGN KEY (episode) REFERENCES tv(id);


--
-- Name: tv_genre_genre_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY tv_genre
    ADD CONSTRAINT tv_genre_genre_fkey FOREIGN KEY (genre) REFERENCES genres(id);


--
-- Name: tv_series_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY tv
    ADD CONSTRAINT tv_series_fkey FOREIGN KEY (series) REFERENCES series(id);


--
-- Name: user_services_service_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY user_services
    ADD CONSTRAINT user_services_service_id_fkey FOREIGN KEY (service_id) REFERENCES services(id);


--
-- Name: user_services_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY user_services
    ADD CONSTRAINT user_services_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- Name: users_domain_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_domain_fkey FOREIGN KEY (domain) REFERENCES domains(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

